{"uid":"ba075b6568104f53","name":"test_return_to_the_catalog_all_items[problem_user-secret_sauce]","fullName":"tests.test_TC_014_02_return_to_catalog.Tests#test_return_to_the_catalog_all_items","historyId":"dffd96921d8391af1ebfbc129c61d96e","time":{"start":1671194965480,"stop":1671194966156,"duration":676},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x56484e0d82a3 <unknown>\n#1 0x56484de96f77 <unknown>\n#2 0x56484ded380c <unknown>\n#3 0x56484ded3a71 <unknown>\n#4 0x56484df0d734 <unknown>\n#5 0x56484def3b5d <unknown>\n#6 0x56484df0b47c <unknown>\n#7 0x56484def3903 <unknown>\n#8 0x56484dec6ece <unknown>\n#9 0x56484dec7fde <unknown>\n#10 0x56484e12863e <unknown>\n#11 0x56484e12bb79 <unknown>\n#12 0x56484e10e89e <unknown>\n#13 0x56484e12ca83 <unknown>\n#14 0x56484e101505 <unknown>\n#15 0x56484e14dca8 <unknown>\n#16 0x56484e14de36 <unknown>\n#17 0x56484e169333 <unknown>\n#18 0x7f5ef517ab43 <unknown>","statusTrace":"self = <SauceDemoProject.tests.test_TC_014_02_return_to_catalog.Tests object at 0x7f87acf6e0e0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e09475dd1600f5e22a2f70dc970a667a\")>\nusername = 'problem_user', password = 'secret_sauce'\n\n    @allure.feature(\"US_014 | Exit to the catalog of products from the cart in order\")\n    @allure.story(\n        \"TC_014.02 | Return to the catalog of products from shopping cart using the menu item ALL ITEMS\"\n    )\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            (\"standard_user\", \"secret_sauce\"),\n            (\"performance_glitch_user\", \"secret_sauce\"),\n            pytest.param(\n                \"problem_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=NoSuchElementException),\n            ),\n            pytest.param(\n                \"locked_out_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n        ],\n    )\n    def test_return_to_the_catalog_all_items(self, d, username, password):\n        page = LoginPage(d, LoginPageSrc.URL)  # Creates the Login page instance\n        page.open_page()\n        page.register_user(username, password)  # user logs in\n        page = ProductsPage(\n            d, ProductsPageSrc.URL\n        )  # Creates the Products page instance\n        page.should_be_products_page()\n        page.add_item_on_products_page(\n            \"Sauce Labs Fleece Jacket\", \"Test.allTheThings() T-Shirt (Red)\"\n        )\n        page.go_to_basket_page()  # gets to the Cart page\n        page = CartPage(d, CartPageSrc.URL)\n>       page.check_the_quantity()  # checks the cart is not empty\n\ntests/test_TC_014_02_return_to_catalog.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:40: in check_the_quantity\n    quant = self.browser.find_element(*CartPageLocators.QUANTITY).text\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f87abc8d840>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x56484e14de36 \\\\u003Cunknown>\\\\n#17 0x56484e169333 \\\\u003Cunknown>\\\\n#18 0x7f5ef517ab43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\nE         (Session info: headless chrome=108.0.5359.98)\nE       Stacktrace:\nE       #0 0x56484e0d82a3 <unknown>\nE       #1 0x56484de96f77 <unknown>\nE       #2 0x56484ded380c <unknown>\nE       #3 0x56484ded3a71 <unknown>\nE       #4 0x56484df0d734 <unknown>\nE       #5 0x56484def3b5d <unknown>\nE       #6 0x56484df0b47c <unknown>\nE       #7 0x56484def3903 <unknown>\nE       #8 0x56484dec6ece <unknown>\nE       #9 0x56484dec7fde <unknown>\nE       #10 0x56484e12863e <unknown>\nE       #11 0x56484e12bb79 <unknown>\nE       #12 0x56484e10e89e <unknown>\nE       #13 0x56484e12ca83 <unknown>\nE       #14 0x56484e101505 <unknown>\nE       #15 0x56484e14dca8 <unknown>\nE       #16 0x56484e14de36 <unknown>\nE       #17 0x56484e169333 <unknown>\nE       #18 0x7f5ef517ab43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1671194950669,"stop":1671194951542,"duration":873},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1671194950669,"stop":1671194950669,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"g","time":{"start":1671194951543,"stop":1671194951716,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x56484e0d82a3 <unknown>\n#1 0x56484de96f77 <unknown>\n#2 0x56484ded380c <unknown>\n#3 0x56484ded3a71 <unknown>\n#4 0x56484df0d734 <unknown>\n#5 0x56484def3b5d <unknown>\n#6 0x56484df0b47c <unknown>\n#7 0x56484def3903 <unknown>\n#8 0x56484dec6ece <unknown>\n#9 0x56484dec7fde <unknown>\n#10 0x56484e12863e <unknown>\n#11 0x56484e12bb79 <unknown>\n#12 0x56484e10e89e <unknown>\n#13 0x56484e12ca83 <unknown>\n#14 0x56484e101505 <unknown>\n#15 0x56484e14dca8 <unknown>\n#16 0x56484e14de36 <unknown>\n#17 0x56484e169333 <unknown>\n#18 0x7f5ef517ab43 <unknown>","statusTrace":"self = <SauceDemoProject.tests.test_TC_014_02_return_to_catalog.Tests object at 0x7f87acf6e0e0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e09475dd1600f5e22a2f70dc970a667a\")>\nusername = 'problem_user', password = 'secret_sauce'\n\n    @allure.feature(\"US_014 | Exit to the catalog of products from the cart in order\")\n    @allure.story(\n        \"TC_014.02 | Return to the catalog of products from shopping cart using the menu item ALL ITEMS\"\n    )\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            (\"standard_user\", \"secret_sauce\"),\n            (\"performance_glitch_user\", \"secret_sauce\"),\n            pytest.param(\n                \"problem_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=NoSuchElementException),\n            ),\n            pytest.param(\n                \"locked_out_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n        ],\n    )\n    def test_return_to_the_catalog_all_items(self, d, username, password):\n        page = LoginPage(d, LoginPageSrc.URL)  # Creates the Login page instance\n        page.open_page()\n        page.register_user(username, password)  # user logs in\n        page = ProductsPage(\n            d, ProductsPageSrc.URL\n        )  # Creates the Products page instance\n        page.should_be_products_page()\n        page.add_item_on_products_page(\n            \"Sauce Labs Fleece Jacket\", \"Test.allTheThings() T-Shirt (Red)\"\n        )\n        page.go_to_basket_page()  # gets to the Cart page\n        page = CartPage(d, CartPageSrc.URL)\n>       page.check_the_quantity()  # checks the cart is not empty\n\ntests/test_TC_014_02_return_to_catalog.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:40: in check_the_quantity\n    quant = self.browser.find_element(*CartPageLocators.QUANTITY).text\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f87abc8d840>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x56484e14de36 \\\\u003Cunknown>\\\\n#17 0x56484e169333 \\\\u003Cunknown>\\\\n#18 0x7f5ef517ab43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\nE         (Session info: headless chrome=108.0.5359.98)\nE       Stacktrace:\nE       #0 0x56484e0d82a3 <unknown>\nE       #1 0x56484de96f77 <unknown>\nE       #2 0x56484ded380c <unknown>\nE       #3 0x56484ded3a71 <unknown>\nE       #4 0x56484df0d734 <unknown>\nE       #5 0x56484def3b5d <unknown>\nE       #6 0x56484df0b47c <unknown>\nE       #7 0x56484def3903 <unknown>\nE       #8 0x56484dec6ece <unknown>\nE       #9 0x56484dec7fde <unknown>\nE       #10 0x56484e12863e <unknown>\nE       #11 0x56484e12bb79 <unknown>\nE       #12 0x56484e10e89e <unknown>\nE       #13 0x56484e12ca83 <unknown>\nE       #14 0x56484e101505 <unknown>\nE       #15 0x56484e14dca8 <unknown>\nE       #16 0x56484e14de36 <unknown>\nE       #17 0x56484e169333 <unknown>\nE       #18 0x7f5ef517ab43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: NoSuchElementException","steps":[],"attachments":[{"uid":"cb41bd45cd8a938d","name":"Screenshot","source":"cb41bd45cd8a938d.png","type":"image/png","size":78984}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"g::0","time":{"start":1671194967593,"stop":1671194967651,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"US_014 | Exit to the catalog of products from the cart in order"},{"name":"story","value":"TC_014.02 | Return to the catalog of products from shopping cart using the menu item ALL ITEMS"},{"name":"tag","value":"@pytest.mark.xfail(raises=<class 'selenium.common.exceptions.NoSuchElementException'>)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_TC_014_02_return_to_catalog"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az574-63"},{"name":"thread","value":"2750-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_TC_014_02_return_to_catalog"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"'problem_user'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(raises=<class 'selenium.common.exceptions.NoSuchElementException'>)"]},"source":"ba075b6568104f53.json","parameterValues":["'secret_sauce'","'problem_user'"]}