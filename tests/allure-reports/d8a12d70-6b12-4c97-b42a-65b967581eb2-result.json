{"name": "test_TC_007_03_sort_products_by_price_asc[problem_user-secret_sauce]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError:  Error", "trace": "self = <SauceDemoProject.tests.test_TC_007_03_sort_products_by_price_asc.Test object at 0x000002735A4EF3A0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4fbbd6ae2e925e36a520f3757af319a8\")>\nusername = 'problem_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            (\"standard_user\", \"secret_sauce\"),\n            (\"performance_glitch_user\", \"secret_sauce\"),\n            pytest.param(\n                \"locked_out_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n            pytest.param(\n                \"problem_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n        ],\n    )\n    def test_TC_007_03_sort_products_by_price_asc(self, d, username, password):\n        link = \"https://www.saucedemo.com/\"\n        page = LoginPage(d, link)\n        page.open_page()\n        page.register_user(username, password)\n        link = \"https://www.saucedemo.com/inventory.html\"\n        page = ProductsPage(d, link)\n        page.should_be_products_page()\n        # sorting price ascending\n>       page.sorting_products_by_price_asc()\n\ntest_TC_007_03_sort_products_by_price_asc.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.products_page.ProductsPage object at 0x000002735A50A890>\n\n    def sorting_products_by_price_asc(self):\n        sorting_products_by_name_asc = self.browser.find_element(\n            *ProductsPageLocators.SORTING_BY_PRICE_ASC\n        )\n        list_before_sorting = self.browser.find_elements(\n            *ProductsPageLocators.All_PRICES\n        )\n        sorting_products_by_name_asc.click()\n        list_after_sorting = self.browser.find_elements(*ProductsPageLocators.All_PRICES)\n    \n        new_list_before_sorting = []\n        for i in range(len(list_before_sorting)):\n            new_list_before_sorting.append(list_before_sorting[i].text)\n    \n        new_list_for_sort_without_first_symbol = []\n        for i in range(len(new_list_before_sorting)):\n            new_list_for_sort_without_first_symbol.append(\n                float(new_list_before_sorting[i].replace(\"$\", \"\"))\n            )\n    \n        new_list_for_sort_without_first_symbol.sort()\n    \n        new_list_after_sort = []\n        for i in range(len(list_after_sorting)):\n            new_list_after_sort.append(list_after_sorting[i].text)\n    \n        new_list_all_price_after_sorting = []\n        for i in range(len(new_list_after_sort)):\n            new_list_all_price_after_sorting.append(\n                float(new_list_after_sort[i].replace(\"$\", \"\"))\n            )\n    \n>       assert (\n                new_list_for_sort_without_first_symbol == new_list_all_price_after_sorting\n        ), \" Error\"\nE       AssertionError:  Error\n\n..\\pages\\products_page.py:179: AssertionError"}, "attachments": [{"name": "Screeshot", "source": "9239d6a5-bcf6-44cf-9ab5-32277aac7662-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "3dd7896b-0b38-4233-a32f-b295d8498b8c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'problem_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1669806868022, "stop": 1669806868485, "uuid": "0a986ff2-952a-4570-9c8e-65488bd4b63c", "historyId": "b1d2ef65d6414853b504c93605aebedc", "testCaseId": "87ea44760fba036d3f998e325aa6642d", "fullName": "tests.test_TC_007_03_sort_products_by_price_asc.Test#test_TC_007_03_sort_products_by_price_asc", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(raises=<class 'AssertionError'>)"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_TC_007_03_sort_products_by_price_asc"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "DESKTOP-DBCHJ8G"}, {"name": "thread", "value": "17412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_TC_007_03_sort_products_by_price_asc"}]}