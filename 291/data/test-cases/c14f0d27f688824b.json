{"uid":"c14f0d27f688824b","name":"test_TC_002_02_read_privacy_policy_from_cart","fullName":"tests.test_TC_002_read_privacy_policy.Tests#test_TC_002_02_read_privacy_policy_from_cart","historyId":"ace81add7463e5714c3c7e3dc5f1bcdc","time":{"start":1671198664251,"stop":1671198664775,"duration":524},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x5628ee9ef2a3 <unknown>\n#1 0x5628ee7adf77 <unknown>\n#2 0x5628ee7b19c8 <unknown>\n#3 0x5628ee7b1792 <unknown>\n#4 0x5628ee7b1a9c <unknown>\n#5 0x5628ee7ea538 <unknown>\n#6 0x5628ee7eaa71 <unknown>\n#7 0x5628ee824734 <unknown>\n#8 0x5628ee80ab5d <unknown>\n#9 0x5628ee82247c <unknown>\n#10 0x5628ee80a903 <unknown>\n#11 0x5628ee7ddece <unknown>\n#12 0x5628ee7defde <unknown>\n#13 0x5628eea3f63e <unknown>\n#14 0x5628eea42b79 <unknown>\n#15 0x5628eea2589e <unknown>\n#16 0x5628eea43a83 <unknown>\n#17 0x5628eea18505 <unknown>\n#18 0x5628eea64ca8 <unknown>\n#19 0x5628eea64e36 <unknown>\n#20 0x5628eea80333 <unknown>\n#21 0x7fee37967b43 <unknown>","statusTrace":"self = <SauceDemoProject.tests.test_TC_002_read_privacy_policy.Tests object at 0x7f4a47d98fa0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b60bbeef85859ac6d149de8ce132b60\")>\n\n    @allure.feature(\"US_002 | Privacy Policy\")\n    @allure.story(\"TC_002.02 | Read Privacy Policy from the cart\")\n    @pytest.mark.xfail(raises=InvalidSelectorException)\n    def test_TC_002_02_read_privacy_policy_from_cart(self, d):\n        page = LoginPage(d, LoginPageSrc.URL)  # Creates the Login page instance\n        page.open_page()\n        page.register_user(\"standard_user\", \"secret_sauce\")  # Standard user logs in\n        page = ProductsPage(\n            d, ProductsPageSrc.URL\n        )  # Creates the Products page instance\n        page.add_item_on_products_page(\n            \"Sauce Labs Onesie\"\n        )  # Adds one product into the cart\n        page.go_to_basket_page()  # gets to the Cart page\n        page = CartPage(d, CartPageSrc.URL)  # Creates the Cart page instance\n>       page.check_privacy_link()  # tries to click on Privacy Policy\n\ntests/test_TC_002_read_privacy_policy.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:36: in check_privacy_link\n    self.browser.find_element(*PageLocators.PRIVACY).click()\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4a47c48580>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: The result of the xpath ex...\\\\n#19 0x5628eea64e36 \\\\u003Cunknown>\\\\n#20 0x5628eea80333 \\\\u003Cunknown>\\\\n#21 0x7fee37967b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\nE         (Session info: headless chrome=108.0.5359.98)\nE       Stacktrace:\nE       #0 0x5628ee9ef2a3 <unknown>\nE       #1 0x5628ee7adf77 <unknown>\nE       #2 0x5628ee7b19c8 <unknown>\nE       #3 0x5628ee7b1792 <unknown>\nE       #4 0x5628ee7b1a9c <unknown>\nE       #5 0x5628ee7ea538 <unknown>\nE       #6 0x5628ee7eaa71 <unknown>\nE       #7 0x5628ee824734 <unknown>\nE       #8 0x5628ee80ab5d <unknown>\nE       #9 0x5628ee82247c <unknown>\nE       #10 0x5628ee80a903 <unknown>\nE       #11 0x5628ee7ddece <unknown>\nE       #12 0x5628ee7defde <unknown>\nE       #13 0x5628eea3f63e <unknown>\nE       #14 0x5628eea42b79 <unknown>\nE       #15 0x5628eea2589e <unknown>\nE       #16 0x5628eea43a83 <unknown>\nE       #17 0x5628eea18505 <unknown>\nE       #18 0x5628eea64ca8 <unknown>\nE       #19 0x5628eea64e36 <unknown>\nE       #20 0x5628eea80333 <unknown>\nE       #21 0x7fee37967b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"d","time":{"start":1671198660685,"stop":1671198662363,"duration":1678},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1671198660685,"stop":1671198660685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"g","time":{"start":1671198662364,"stop":1671198662677,"duration":313},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x5628ee9ef2a3 <unknown>\n#1 0x5628ee7adf77 <unknown>\n#2 0x5628ee7b19c8 <unknown>\n#3 0x5628ee7b1792 <unknown>\n#4 0x5628ee7b1a9c <unknown>\n#5 0x5628ee7ea538 <unknown>\n#6 0x5628ee7eaa71 <unknown>\n#7 0x5628ee824734 <unknown>\n#8 0x5628ee80ab5d <unknown>\n#9 0x5628ee82247c <unknown>\n#10 0x5628ee80a903 <unknown>\n#11 0x5628ee7ddece <unknown>\n#12 0x5628ee7defde <unknown>\n#13 0x5628eea3f63e <unknown>\n#14 0x5628eea42b79 <unknown>\n#15 0x5628eea2589e <unknown>\n#16 0x5628eea43a83 <unknown>\n#17 0x5628eea18505 <unknown>\n#18 0x5628eea64ca8 <unknown>\n#19 0x5628eea64e36 <unknown>\n#20 0x5628eea80333 <unknown>\n#21 0x7fee37967b43 <unknown>","statusTrace":"self = <SauceDemoProject.tests.test_TC_002_read_privacy_policy.Tests object at 0x7f4a47d98fa0>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0b60bbeef85859ac6d149de8ce132b60\")>\n\n    @allure.feature(\"US_002 | Privacy Policy\")\n    @allure.story(\"TC_002.02 | Read Privacy Policy from the cart\")\n    @pytest.mark.xfail(raises=InvalidSelectorException)\n    def test_TC_002_02_read_privacy_policy_from_cart(self, d):\n        page = LoginPage(d, LoginPageSrc.URL)  # Creates the Login page instance\n        page.open_page()\n        page.register_user(\"standard_user\", \"secret_sauce\")  # Standard user logs in\n        page = ProductsPage(\n            d, ProductsPageSrc.URL\n        )  # Creates the Products page instance\n        page.add_item_on_products_page(\n            \"Sauce Labs Onesie\"\n        )  # Adds one product into the cart\n        page.go_to_basket_page()  # gets to the Cart page\n        page = CartPage(d, CartPageSrc.URL)  # Creates the Cart page instance\n>       page.check_privacy_link()  # tries to click on Privacy Policy\n\ntests/test_TC_002_read_privacy_policy.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/cart_page.py:36: in check_privacy_link\n    self.browser.find_element(*PageLocators.PRIVACY).click()\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4a47c48580>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: The result of the xpath ex...\\\\n#19 0x5628eea64e36 \\\\u003Cunknown>\\\\n#20 0x5628eea80333 \\\\u003Cunknown>\\\\n#21 0x7fee37967b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\nE         (Session info: headless chrome=108.0.5359.98)\nE       Stacktrace:\nE       #0 0x5628ee9ef2a3 <unknown>\nE       #1 0x5628ee7adf77 <unknown>\nE       #2 0x5628ee7b19c8 <unknown>\nE       #3 0x5628ee7b1792 <unknown>\nE       #4 0x5628ee7b1a9c <unknown>\nE       #5 0x5628ee7ea538 <unknown>\nE       #6 0x5628ee7eaa71 <unknown>\nE       #7 0x5628ee824734 <unknown>\nE       #8 0x5628ee80ab5d <unknown>\nE       #9 0x5628ee82247c <unknown>\nE       #10 0x5628ee80a903 <unknown>\nE       #11 0x5628ee7ddece <unknown>\nE       #12 0x5628ee7defde <unknown>\nE       #13 0x5628eea3f63e <unknown>\nE       #14 0x5628eea42b79 <unknown>\nE       #15 0x5628eea2589e <unknown>\nE       #16 0x5628eea43a83 <unknown>\nE       #17 0x5628eea18505 <unknown>\nE       #18 0x5628eea64ca8 <unknown>\nE       #19 0x5628eea64e36 <unknown>\nE       #20 0x5628eea80333 <unknown>\nE       #21 0x7fee37967b43 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/saucedemoproject-P9vpYs8v-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: InvalidSelectorException","steps":[],"attachments":[{"uid":"af524c41a426acf9","name":"Screenshot","source":"af524c41a426acf9.png","type":"image/png","size":99647}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"g::0","time":{"start":1671198670118,"stop":1671198670179,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"TC_002.02 | Read Privacy Policy from the cart"},{"name":"feature","value":"US_002 | Privacy Policy"},{"name":"tag","value":"@pytest.mark.xfail(raises=<class 'selenium.common.exceptions.InvalidSelectorException'>)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_TC_002_read_privacy_policy"},{"name":"subSuite","value":"Tests"},{"name":"host","value":"fv-az577-69"},{"name":"thread","value":"2803-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_TC_002_read_privacy_policy"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":8,"passed":0,"unknown":0,"total":8},"items":[{"uid":"820a500c8b372b7d","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/289//#testresult/820a500c8b372b7d","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x561d92c132a3 <unknown>\n#1 0x561d929d1f77 <unknown>\n#2 0x561d929d59c8 <unknown>\n#3 0x561d929d5792 <unknown>\n#4 0x561d929d5a9c <unknown>\n#5 0x561d92a0e538 <unknown>\n#6 0x561d92a0ea71 <unknown>\n#7 0x561d92a48734 <unknown>\n#8 0x561d92a2eb5d <unknown>\n#9 0x561d92a4647c <unknown>\n#10 0x561d92a2e903 <unknown>\n#11 0x561d92a01ece <unknown>\n#12 0x561d92a02fde <unknown>\n#13 0x561d92c6363e <unknown>\n#14 0x561d92c66b79 <unknown>\n#15 0x561d92c4989e <unknown>\n#16 0x561d92c67a83 <unknown>\n#17 0x561d92c3c505 <unknown>\n#18 0x561d92c88ca8 <unknown>\n#19 0x561d92c88e36 <unknown>\n#20 0x561d92ca4333 <unknown>\n#21 0x7f3414c5cb43 <unknown>","time":{"start":1671197585296,"stop":1671197585755,"duration":459}},{"uid":"4b49d4c1241b3ac0","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/4//#testresult/4b49d4c1241b3ac0","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x5567dfe572a3 <unknown>\n#1 0x5567dfc15f77 <unknown>\n#2 0x5567dfc199c8 <unknown>\n#3 0x5567dfc19792 <unknown>\n#4 0x5567dfc19a9c <unknown>\n#5 0x5567dfc52538 <unknown>\n#6 0x5567dfc52a71 <unknown>\n#7 0x5567dfc8c734 <unknown>\n#8 0x5567dfc72b5d <unknown>\n#9 0x5567dfc8a47c <unknown>\n#10 0x5567dfc72903 <unknown>\n#11 0x5567dfc45ece <unknown>\n#12 0x5567dfc46fde <unknown>\n#13 0x5567dfea763e <unknown>\n#14 0x5567dfeaab79 <unknown>\n#15 0x5567dfe8d89e <unknown>\n#16 0x5567dfeaba83 <unknown>\n#17 0x5567dfe80505 <unknown>\n#18 0x5567dfeccca8 <unknown>\n#19 0x5567dfecce36 <unknown>\n#20 0x5567dfee8333 <unknown>\n#21 0x7fb9e814eb43 <unknown>","time":{"start":1671197573740,"stop":1671197574183,"duration":443}},{"uid":"47eb6f2962621043","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/3//#testresult/47eb6f2962621043","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x5615cb02e2a3 <unknown>\n#1 0x5615cadecf77 <unknown>\n#2 0x5615cadf09c8 <unknown>\n#3 0x5615cadf0792 <unknown>\n#4 0x5615cadf0a9c <unknown>\n#5 0x5615cae29538 <unknown>\n#6 0x5615cae29a71 <unknown>\n#7 0x5615cae63734 <unknown>\n#8 0x5615cae49b5d <unknown>\n#9 0x5615cae6147c <unknown>\n#10 0x5615cae49903 <unknown>\n#11 0x5615cae1cece <unknown>\n#12 0x5615cae1dfde <unknown>\n#13 0x5615cb07e63e <unknown>\n#14 0x5615cb081b79 <unknown>\n#15 0x5615cb06489e <unknown>\n#16 0x5615cb082a83 <unknown>\n#17 0x5615cb057505 <unknown>\n#18 0x5615cb0a3ca8 <unknown>\n#19 0x5615cb0a3e36 <unknown>\n#20 0x5615cb0bf333 <unknown>\n#21 0x7f96984c3b43 <unknown>","time":{"start":1671195883350,"stop":1671195883996,"duration":646}},{"uid":"a5a7b13646456760","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/288//#testresult/a5a7b13646456760","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x55bc40a8f2a3 <unknown>\n#1 0x55bc4084df77 <unknown>\n#2 0x55bc408519c8 <unknown>\n#3 0x55bc40851792 <unknown>\n#4 0x55bc40851a9c <unknown>\n#5 0x55bc4088a538 <unknown>\n#6 0x55bc4088aa71 <unknown>\n#7 0x55bc408c4734 <unknown>\n#8 0x55bc408aab5d <unknown>\n#9 0x55bc408c247c <unknown>\n#10 0x55bc408aa903 <unknown>\n#11 0x55bc4087dece <unknown>\n#12 0x55bc4087efde <unknown>\n#13 0x55bc40adf63e <unknown>\n#14 0x55bc40ae2b79 <unknown>\n#15 0x55bc40ac589e <unknown>\n#16 0x55bc40ae3a83 <unknown>\n#17 0x55bc40ab8505 <unknown>\n#18 0x55bc40b04ca8 <unknown>\n#19 0x55bc40b04e36 <unknown>\n#20 0x55bc40b20333 <unknown>\n#21 0x7f279f43fb43 <unknown>","time":{"start":1671195870788,"stop":1671195871337,"duration":549}},{"uid":"1518e2b9b7a05d17","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/287//#testresult/1518e2b9b7a05d17","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x55b647d6a2a3 <unknown>\n#1 0x55b647b28f77 <unknown>\n#2 0x55b647b2c9c8 <unknown>\n#3 0x55b647b2c792 <unknown>\n#4 0x55b647b2ca9c <unknown>\n#5 0x55b647b65538 <unknown>\n#6 0x55b647b65a71 <unknown>\n#7 0x55b647b9f734 <unknown>\n#8 0x55b647b85b5d <unknown>\n#9 0x55b647b9d47c <unknown>\n#10 0x55b647b85903 <unknown>\n#11 0x55b647b58ece <unknown>\n#12 0x55b647b59fde <unknown>\n#13 0x55b647dba63e <unknown>\n#14 0x55b647dbdb79 <unknown>\n#15 0x55b647da089e <unknown>\n#16 0x55b647dbea83 <unknown>\n#17 0x55b647d93505 <unknown>\n#18 0x55b647ddfca8 <unknown>\n#19 0x55b647ddfe36 <unknown>\n#20 0x55b647dfb333 <unknown>\n#21 0x7f54d45a2b43 <unknown>","time":{"start":1671195076887,"stop":1671195077511,"duration":624}},{"uid":"8b7011a72665cb41","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/286//#testresult/8b7011a72665cb41","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x5650448d32a3 <unknown>\n#1 0x565044691f77 <unknown>\n#2 0x5650446959c8 <unknown>\n#3 0x565044695792 <unknown>\n#4 0x565044695a9c <unknown>\n#5 0x5650446ce538 <unknown>\n#6 0x5650446cea71 <unknown>\n#7 0x565044708734 <unknown>\n#8 0x5650446eeb5d <unknown>\n#9 0x56504470647c <unknown>\n#10 0x5650446ee903 <unknown>\n#11 0x5650446c1ece <unknown>\n#12 0x5650446c2fde <unknown>\n#13 0x56504492363e <unknown>\n#14 0x565044926b79 <unknown>\n#15 0x56504490989e <unknown>\n#16 0x565044927a83 <unknown>\n#17 0x5650448fc505 <unknown>\n#18 0x565044948ca8 <unknown>\n#19 0x565044948e36 <unknown>\n#20 0x565044964333 <unknown>\n#21 0x7f56a56e0b43 <unknown>","time":{"start":1671194961378,"stop":1671194961939,"duration":561}},{"uid":"8c4ebb7256d3e5ca","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/285//#testresult/8c4ebb7256d3e5ca","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.InvalidSelectorException: Message: invalid selector: The result of the xpath expression \"//*[@class = 'footer_copy']/text()[3]\" is: [object Text]. It should be an element.\n  (Session info: headless chrome=108.0.5359.98)\nStacktrace:\n#0 0x564b15fad2a3 <unknown>\n#1 0x564b15d6bf77 <unknown>\n#2 0x564b15d6f9c8 <unknown>\n#3 0x564b15d6f792 <unknown>\n#4 0x564b15d6fa9c <unknown>\n#5 0x564b15da8538 <unknown>\n#6 0x564b15da8a71 <unknown>\n#7 0x564b15de2734 <unknown>\n#8 0x564b15dc8b5d <unknown>\n#9 0x564b15de047c <unknown>\n#10 0x564b15dc8903 <unknown>\n#11 0x564b15d9bece <unknown>\n#12 0x564b15d9cfde <unknown>\n#13 0x564b15ffd63e <unknown>\n#14 0x564b16000b79 <unknown>\n#15 0x564b15fe389e <unknown>\n#16 0x564b16001a83 <unknown>\n#17 0x564b15fd6505 <unknown>\n#18 0x564b16022ca8 <unknown>\n#19 0x564b16022e36 <unknown>\n#20 0x564b1603e333 <unknown>\n#21 0x7fd33ab69b43 <unknown>","time":{"start":1671194896161,"stop":1671194896813,"duration":652}}]},"tags":["@pytest.mark.xfail(raises=<class 'selenium.common.exceptions.InvalidSelectorException'>)"]},"source":"c14f0d27f688824b.json","parameterValues":[]}