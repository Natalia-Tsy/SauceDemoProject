{"uid":"250ee02931e28280","name":"test_user_can_go_to_checkout_2_page[locked_out_user-secret_sauce]","fullName":"tests.test_TC_016_01_return_to_catalog_after_order.TestSample#test_user_can_go_to_checkout_2_page","historyId":"73982a3956cba890e83bfcb5cff2f945","time":{"start":1671197718146,"stop":1671197718378,"duration":232},"description":"Checks whether a user can navigate to the second checkout page of a website\n        after logging in, adding items to cart, navigating to the cart page,\n        and filling out the shipping information on the first checkout page.\n\n        Args:\n            d: WebDriver\n            username: used to specify the username of the user\n            password: used to specify the password of the user\n        ","descriptionHtml":"<p>Checks whether a user can navigate to the second checkout page of a website<br />\nafter logging in, adding items to cart, navigating to the cart page,<br />\nand filling out the shipping information on the first checkout page.</p>\n<pre><code>    Args:\n        d: WebDriver\n        username: used to specify the username of the user\n        password: used to specify the password of the user\n</code></pre>\n","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","statusTrace":"self = <SauceDemoProject.tests.test_TC_016_01_return_to_catalog_after_order.TestSample object at 0x7f2b8eff2170>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c3f67dd7efa92bbbcb5da1f733237b6\")>\nusername = 'locked_out_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            (\"standard_user\", \"secret_sauce\"),\n            (\"performance_glitch_user\", \"secret_sauce\"),\n            pytest.param(\n                \"problem_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n            pytest.param(\n                \"locked_out_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n        ],\n    )\n    def test_user_can_go_to_checkout_2_page(self, d, username, password):\n        \"\"\"Checks whether a user can navigate to the second checkout page of a website\n        after logging in, adding items to cart, navigating to the cart page,\n        and filling out the shipping information on the first checkout page.\n    \n        Args:\n            d: WebDriver\n            username: used to specify the username of the user\n            password: used to specify the password of the user\n        \"\"\"\n>       self.test_user_can_go_to_checkout_1_page(d, username, password)\n\ntests/test_TC_016_01_return_to_catalog_after_order.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_TC_016_01_return_to_catalog_after_order.py:110: in test_user_can_go_to_checkout_1_page\n    self.test_user_can_go_to_cart_page(d, username, password)\ntests/test_TC_016_01_return_to_catalog_after_order.py:81: in test_user_can_go_to_cart_page\n    self.test_user_can_go_to_products_page(d, username, password)\ntests/test_TC_016_01_return_to_catalog_after_order.py:58: in test_user_can_go_to_products_page\n    page.should_be_products_page()\npages/products_page.py:16: in should_be_products_page\n    self.should_be_link(ProductsPageSrc.LINK)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.products_page.ProductsPage object at 0x7f2b8dd5f2b0>\nlink = 'inventory'\n\n    def should_be_link(self, link):\n        \"\"\"Check that the link provided is in the current URL of the browser.\n    \n        Args:\n            link: link browser\n        \"\"\"\n        assert (\n>           link in self.browser.current_url\n        ), f\"Expected link {link} not found in URL {self.browser.current_url}\"\nE       AssertionError: Expected link inventory not found in URL https://www.saucedemo.com/\n\npages/base_page.py:350: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1671197687010,"stop":1671197687010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"d","time":{"start":1671197687010,"stop":1671197687818,"duration":808},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"g","time":{"start":1671197687819,"stop":1671197688055,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Checks whether a user can navigate to the second checkout page of a website\n        after logging in, adding items to cart, navigating to the cart page,\n        and filling out the shipping information on the first checkout page.\n\n        Args:\n            d: WebDriver\n            username: used to specify the username of the user\n            password: used to specify the password of the user\n        ","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","statusTrace":"self = <SauceDemoProject.tests.test_TC_016_01_return_to_catalog_after_order.TestSample object at 0x7f2b8eff2170>\nd = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c3f67dd7efa92bbbcb5da1f733237b6\")>\nusername = 'locked_out_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [\n            (\"standard_user\", \"secret_sauce\"),\n            (\"performance_glitch_user\", \"secret_sauce\"),\n            pytest.param(\n                \"problem_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n            pytest.param(\n                \"locked_out_user\",\n                \"secret_sauce\",\n                marks=pytest.mark.xfail(raises=AssertionError),\n            ),\n        ],\n    )\n    def test_user_can_go_to_checkout_2_page(self, d, username, password):\n        \"\"\"Checks whether a user can navigate to the second checkout page of a website\n        after logging in, adding items to cart, navigating to the cart page,\n        and filling out the shipping information on the first checkout page.\n    \n        Args:\n            d: WebDriver\n            username: used to specify the username of the user\n            password: used to specify the password of the user\n        \"\"\"\n>       self.test_user_can_go_to_checkout_1_page(d, username, password)\n\ntests/test_TC_016_01_return_to_catalog_after_order.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_TC_016_01_return_to_catalog_after_order.py:110: in test_user_can_go_to_checkout_1_page\n    self.test_user_can_go_to_cart_page(d, username, password)\ntests/test_TC_016_01_return_to_catalog_after_order.py:81: in test_user_can_go_to_cart_page\n    self.test_user_can_go_to_products_page(d, username, password)\ntests/test_TC_016_01_return_to_catalog_after_order.py:58: in test_user_can_go_to_products_page\n    page.should_be_products_page()\npages/products_page.py:16: in should_be_products_page\n    self.should_be_link(ProductsPageSrc.LINK)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.products_page.ProductsPage object at 0x7f2b8dd5f2b0>\nlink = 'inventory'\n\n    def should_be_link(self, link):\n        \"\"\"Check that the link provided is in the current URL of the browser.\n    \n        Args:\n            link: link browser\n        \"\"\"\n        assert (\n>           link in self.browser.current_url\n        ), f\"Expected link {link} not found in URL {self.browser.current_url}\"\nE       AssertionError: Expected link inventory not found in URL https://www.saucedemo.com/\n\npages/base_page.py:350: AssertionError","steps":[],"attachments":[{"uid":"d4ad58b031514403","name":"Screenshot","source":"d4ad58b031514403.png","type":"image/png","size":69962}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"g::0","time":{"start":1671197742225,"stop":1671197742283,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(raises=<class 'AssertionError'>)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_TC_016_01_return_to_catalog_after_order"},{"name":"subSuite","value":"TestSample"},{"name":"host","value":"fv-az741-927"},{"name":"thread","value":"2761-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_TC_016_01_return_to_catalog_after_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"'locked_out_user'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":7,"passed":0,"unknown":0,"total":7},"items":[{"uid":"9251f170840b6e1a","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/4//#testresult/9251f170840b6e1a","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671197706772,"stop":1671197707014,"duration":242}},{"uid":"c5f3ac68c4fcd0c","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/3//#testresult/c5f3ac68c4fcd0c","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671196031834,"stop":1671196032207,"duration":373}},{"uid":"a8c192e93d0afd74","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/288//#testresult/a8c192e93d0afd74","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671196006734,"stop":1671196007003,"duration":269}},{"uid":"c5502ffaaa28b6ee","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/287//#testresult/c5502ffaaa28b6ee","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671195223898,"stop":1671195224224,"duration":326}},{"uid":"3b5d90f08f5007a5","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/286//#testresult/3b5d90f08f5007a5","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671195105760,"stop":1671195106083,"duration":323}},{"uid":"c163d9b5e44a104d","reportUrl":"https://Natalia-Tsy.github.io/SauceDemoProject/285//#testresult/c163d9b5e44a104d","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: Expected link inventory not found in URL https://www.saucedemo.com/","time":{"start":1671195043093,"stop":1671195043482,"duration":389}}]},"tags":["@pytest.mark.xfail(raises=<class 'AssertionError'>)"]},"source":"250ee02931e28280.json","parameterValues":["'secret_sauce'","'locked_out_user'"]}